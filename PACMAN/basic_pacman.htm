<!DOCTYPE html>
<html>
    
    <head></head>
    
    <body>SCORE:
        <input id="lblScore" type="text" />
        <br/>
        TIME:
        <input id="lblTime" type="text" />
        <br/>
        <canvas id="canvas" style="border: 5px solid black;" height="740" width="740"></canvas>
		
		
        <script type="text/javascript">
            var context = canvas.getContext("2d");
            var shape=new Object();
            var m1_pos=new Object();
            var m2_pos=new Object();
            var lives;
            var catched; 
            var board;
            var score;
            var pac_color;
            var start_time;
            var time_elapsed;    
            var interval;
            var prev;

		Start();
			
            function Start() {

                board = new Array();
                score = 0;
                catched = 0
                pac_color="yellow";
                var cnt = 289;
                var food_remain = 90;
                var pacman_remain = 1;
                lives = 5;
                start_time= new Date();

                for (var i = 0; i < 18; i++) {
                    board[i] = new Array();
                }

                board[13][1] = 4;
                board[15][4] = 4;
                board[14][4] = 4;
                board[16][3] = 4;
                board[16][2] = 4;
                board[16][1] = 4;
                board[16][4] = 4;

                board[11][4] = 4;
                board[11][3] = 4;
                board[11][2] = 4;
                board[11][1] = 4;
                board[10][1] = 4;
                board[9][1] = 4;

                board[10][12] = 4;
                board[12][12] = 4;
                board[16][13] = 4;
                board[16][16] = 4;
                board[3][3] = 4;
                board[3][4] = 4;
                board[6][1] = 4;
                board[3][5] = 4;
                board[6][2] = 4;
                board[14][15] = 4;
                board[11][11] = 4;
                board[2][17] = 4;
                board[3][16] = 4;
                board[10][9] = 4;
                board[10][10] = 4;
                board[1][10] = 4;
                board[2][10] = 4;
                board[3][10] = 4;
                board[4][10] = 4;
                board[5][10] = 4;
                board[6][10] = 4;
                board[7][10] = 4;
                board[8][10] = 4;
                board[8][9] = 4;
                board[8][11] = 4;
                board[8][12] = 4;
                board[8][13] = 4;
                board[8][14] = 4;
                board[7][14] = 4;
                board[4][17] = 4;
                
                //ghosts
                m1_pos.i=0;
                m1_pos.j=0;

                m2_pos.i=17;
                m2_pos.j=17;

                board[0][0] = 3;
                board[17][17] = 5;
                board[0][17] = 6;

                
                for (var i = 0; i < 18; i++) {
                    for (var j = 0; j < 18; j++) {
                        if(board[i][j]==4 || board[i][j]==3 || board[i][j]==4 || board[i][j]==5 || board[i][j]==6){
                            continue;
                        }
                        else{
                            var randomNum = Math.random();
                            if (randomNum <= 1.0 * food_remain / cnt) {
                                food_remain--;
                                board[i][j] = 1;
                            } else if (randomNum < 1.0 * (pacman_remain + food_remain) / cnt) {
                                shape.i=i;
                                shape.j=j;
                                pacman_remain--;
                                board[i][j] = 2;
                            } else {
                                board[i][j] = 0;
                            }
                            cnt--;
                        }
                    }
                }
                while(food_remain>0){
					var emptyCell = findRandomEmptyCell(board);
					board[emptyCell[0]][emptyCell[1]] = 1;
					food_remain--;
                }
                keysDown = {};
                addEventListener("keydown", function (e) {
                    keysDown[e.keyCode] = true;
                }, false);
                addEventListener("keyup", function (e) {
                    keysDown[e.keyCode] = false;
                }, false);
                interval=setInterval(UpdatePosition, 150);
                interval=setInterval(UpdatePositionGhosts, 600);

            }
            function findRandomEmptyCell(board){
             	var i = Math.floor((Math.random() * 9) + 1);
             	var j = Math.floor((Math.random() * 9) + 1);
    			while(board[i][j]!=0 && i!=0 && j!=0)
    			{
             		i = Math.floor((Math.random() * 9) + 1);
             		j = Math.floor((Math.random() * 9) + 1);
    			}
                return [i,j];             
            }
            function GetKeyPressed() {
                if (keysDown[38]) {
                    return 1;
                }
                if (keysDown[40]) { 
                    return 2;
                }
                if (keysDown[37]) { 
                    return 3;
                }
                if (keysDown[39]) { 
                    return 4;
                }
            }

            function Draw() {
            	canvas.width=canvas.width; //clean board
                lblScore.value = score;
                lblTime.value = time_elapsed;

                context.fillStyle = "darkolivegreen";
                context.fillRect(0, 0, canvas.width, canvas.height);
                
                for (var i = 0; i < 18; i++) {
                    for (var j = 0; j < 18; j++) {
                        var center = new Object();
                        center.x = i * 40 + 30;
                        center.y = j * 40 + 30;

                        if (board[i][j] == 2) {
                            context.beginPath();
                            context.arc(center.x, center.y, 20, 0.15 * Math.PI, 1.85 * Math.PI); // half circle
                            context.lineTo(center.x, center.y);
                            context.fillStyle = pac_color; //color 
                            context.fill();
                            context.beginPath();
                            context.arc(center.x + 5, center.y - 13, 4, 0, 2 * Math.PI); // circle
                            context.fillStyle = "black"; //color 
                            context.fill();
                        }
                        else if (board[i][j] == 1) {
                            context.beginPath();
                            context.arc(center.x, center.y, 10, 0, 2 * Math.PI); // circle
                            context.fillStyle = "black"; //color 
                            context.fill();
                        }
                        else if (board[i][j] == 4) {
                            context.beginPath();
                            context.rect(center.x-20, center.y-20, 40, 40);
                            context.fillStyle = "grey"; //color 
                            context.fill();
                        }
                        else if (board[i][j] == 3) {
                            base_image = new Image();
                            base_image.src = 'ghost.png';
                            context.drawImage(base_image, center.x-20, center.y-20, 40, 40);
                        }
                        else if (board[i][j] == 5) {
                            base_image = new Image();
                            base_image.src = 'ghost1.png';
                            context.drawImage(base_image, center.x-20, center.y-20, 40, 40);
                        }
                        else if (board[i][j] == 6) {
                            base_image = new Image();
                            base_image.src = 'ghost2.png';
                            context.drawImage(base_image, center.x-20, center.y-20, 40, 40);
                        }
                    }
                }
            }
            function UpdatePositionGhosts(){
                if(m1_pos.i < shape.i) {
                    if(board[m1_pos.i+1][m1_pos.j]!=4){
                        board[m1_pos.i][m1_pos.j] = prev;
                        prev = board[m1_pos.i+1][m1_pos.j];
                        m1_pos.i++;
                        board[m1_pos.i][m1_pos.j]=3;
                    }
                    
                }
                else if(m1_pos.j < shape.j){
                    if(board[m1_pos.i][m1_pos.j+1]!=4){
                        board[m1_pos.i][m1_pos.j] = prev;
                        prev = board[m1_pos.i][m1_pos.j+1];
                        m1_pos.j++;
                        board[m1_pos.i][m1_pos.j]=3;
                    }
                }

                if((shape.i==m1_pos.i && shape.j==m1_pos.j) || (shape.i==m2_pos.i && shape.j==m2_pos.j)){
                    board[shape.i][shape.j]=0;

                    score-=10;
                    catched++;
                    lives--;
                    m1_pos.i=0;
                    m1_pos.j=0;
                    shape.i=10;
                    shape.j=10;
                    if(lives==0){
                        window.clearInterval(interval);
                        window.alert("Game lost");
                    }
                }
            }

            function UpdatePosition() {
            	board[shape.i][shape.j]=0;
                var x = GetKeyPressed()
                if(x==1)
                {
                	if(shape.j>0 && board[shape.i][shape.j-1]!=4)
                	{
                		shape.j--;
                	}
                }
                if(x==2)
                {
                	if(shape.j<17 && board[shape.i][shape.j+1]!=4)
                	{
                		shape.j++;
                	}
                }
                if(x==3)
                {
                	if(shape.i>0 && board[shape.i-1][shape.j]!=4)
                	{
                		shape.i--;
                	}
                }
                if(x==4)
                {
                	if(shape.i<17 && board[shape.i+1][shape.j]!=4)
                	{
                		shape.i++;
                	}
                }
                if(board[shape.i][shape.j]==1)
                {
                	score++;
                }
                board[shape.i][shape.j]=2;
                var currentTime=new Date();
                time_elapsed=(currentTime-start_time)/1000;

                //ghost catch
                if((shape.i==m1_pos.i && shape.j==m1_pos.j) || (shape.i==m2_pos.i && shape.j==m2_pos.j)){
                    board[shape.i][shape.j]=0;
                    score-=10;
                    catched++;
                    lives--;
                    m1_pos.i=0;
                    m1_pos.j=0;
                    shape.i=10;
                    shape.j=10;
                    

                    if(lives==0){
                        window.clearInterval(interval);
                        window.alert("Game lost");
                    }
                }

            	if(score>=20&&time_elapsed<=10)
            	{
            		pac_color="green";
            	}
            	if(score==(150-10*catched))
            	{
            		window.clearInterval(interval);
            		window.alert("Game completed");
            	}
            	else
            	{
            		Draw();
            	}
            }

        </script>
    </body>

</html>
